#! /bin/sh

#set -e
set -x

CONFIGDIR=/mnt/hdd/mynode/backup
install -d $CONFIGDIR


if [ -f /dev/hwrng ]
then
     #gerador aleatorio via hardware disponivel	
  RANDOM=/dev/hwrng
else
  RANDOM=/dev/random
fi

if [ -f $CONFIGDIR/.config ]
then
. $CONFIGDIR/.config
fi

if [ -z "$PORT" ]
then
   PORT=22
fi

if [ -z "$REMOTEUSER" ]
then
   REMOTEUSER=bbb
fi

if [ -z "$PUBKEY" ]
then
         #Se não houver chave especificada
   if [ -z "$PASSWORD" ]
   then
         #Se não houver senha, gera senha aleatoriamente
      echo Gerando senha aleatória
      PASSWORD=$( dd if=$RANDOM bs=64 count=1|base64 -w256 )
      echo PASSWORD=$PASSWORD >> $CONFIGDIR/.config 
   fi
  ARGS=--pinentry-mode\ loopback\ --passphrase\ $PASSWORD\ -c
else
  ARGS=--pinentry-mode\ loopback\ --passphrase\ $PASSWORD\ --recipient\ $PUBKEY\ -e   
  if [ -n "$PASSWORD" ]
  then 	
    ARGS=$ARGS\ -s
  fi
fi

if [ ! -f $CONFIGDIR/.key ]
then
	   # se não existe a chave privada, gea uma nova...
	   # esta chave será usada para autenticação segura ssh
   echo Gerando chave ssh
   ssh-keygen -b 4096 -t rsa -f $CONFIGDIR/.key -q -N ""
fi

ARGS=$ARGS\ --quiet\ --no-tty\ --yes\ -z\ 9\ -a 
data=$( date "+%Y%m%d-%H%M" )

if [ -z "$DESTINO" ]
then
   DESTINO=/mnt/hdd/BACKUP
fi

OUT=$DESTINO/btcpayserver-$data.dat

install -d $DESTINO
 
docker exec -i $(docker ps -a -q -f "name=postgres_1") pg_dump -U postgres -d btcpayservermainnet --create | 
    /usr/bin/gpg --output $OUT.asc $ARGS


OUT=$DESTINO/diversos-$data.tar

tar c /mnt/hdd/mynode/bitcoin/*.dat $CONFIGDIR /home/bitcoin/lnd_backup/ /mnt/hdd/mynode/redis |
    /usr/bin/gpg --output $OUT.asc $ARGS

#rsync -e "ssh -i /mnt/hdd/mynode/backup/.key -p 35101" /mnt/hdd/BACKUP/ bbb@casa.ip.inf.br:/BACKUP/ -avzP --fuzzy --delete

if [ -n "$HOST" ]
then
   echo Enviando ao servidor $HOST e apagando origem
   rsync -e "ssh -i /mnt/hdd/mynode/backup/.key -p $PORT" $DESTINO $REMOTEUSER@$HOST:/BACKUP/$REMOTEUSER -avzP --fuzzy --remove-source-files
else
   echo Configure a variável HOST no arquivo $CONFIGDIR/.config
fi

if [ -z "$( cat /var/spool/cron/crontabs/root|grep backupmynode )" ]
then
	# Se não existir no cron, adiciona para executar aos 15 minutos de cada hora	
   echo Adicionando $0 ao crontab
   echo "15 * * * * $0 &> /tmp/logbackup" >>  /var/spool/cron/crontabs/root 
fi
